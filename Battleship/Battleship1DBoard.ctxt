#BlueJ class context
comment0.target=Battleship1DBoard
comment1.params=a
comment1.target=Battleship1DBoard(int)
comment2.params=type
comment2.target=void\ randomPlaceShip(int)
comment2.text=public\ void\ placeShip(int\ type,\ int\ place,\ String\ direction)\ //have\ it\ check\ if\ it\ goes\ on\ top\ of\ another\ ship\ with\ if\ slot\ equalls\ null\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ int\ placementCounter\ \=\ 0;\r\n\ \ \ \ \ \ \ \ if(type\ \=\=\ 5\ &&\ count5\ \!\=\ 0){\r\n\ \ \ \ \ \ \ \ \ \ \ \ Battleship1D\ length5\ \=\ new\ Battleship1D(5);\r\n\ \ \ \ \ \ \ \ \ \ \ \ while\ (true){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ placementCounter++;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (direction.toUpperCase().equals("RIGHT")){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (place\ +\ 5\ <\ battleBoard.length){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for(int\ i\ \=\ place\ +\ 5;\ i\ >\ place;\ i--){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ battleBoard[i]\ \=\ length5;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (placementCounter\ \=\=\ 20){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Could\ not\ place.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ if\ (direction.toUpperCase().equals("LEFT")){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (place\ -\ 5\ >\ 0){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for(int\ i\ \=\ place\ -\ 5;\ i\ <\ place;\ i++){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ battleBoard[i]\ \=\ length5;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (placementCounter\ \=\=\ 20){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Could\ not\ place.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Not\ a\ direction\ to\ place\ in.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\ else\ if\ (type\ \=\=\ 4\ &&\ count4\ \!\=\ 0){\r\n\ \ \ \ \ \ \ \ \ \ \ \ Battleship1D\ length4\ \=\ new\ Battleship1D(4);\r\n\ \ \ \ \ \ \ \ \ \ \ \ while\ (true){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ placementCounter++;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (direction.toUpperCase().equals("RIGHT")){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (place\ +\ 4\ <\ battleBoard.length){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for(int\ i\ \=\ place\ +\ 4;\ i\ >\ place;\ i--){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ battleBoard[i]\ \=\ length4;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (placementCounter\ \=\=\ 20){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Could\ not\ place.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ if\ (direction.toUpperCase().equals("LEFT")){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (place\ -\ 4\ >\ 0){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for(int\ i\ \=\ place\ -\ 4;\ i\ <\ place;\ i++){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ battleBoard[i]\ \=\ length4;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (placementCounter\ \=\=\ 20){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Could\ not\ place.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Not\ a\ direction\ to\ place\ in.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\ else\ if\ (type\ \=\=\ 3\ &&\ count3\ \!\=\ 0){\r\n\ \ \ \ \ \ \ \ \ \ \ \ Battleship1D\ length3\ \=\ new\ Battleship1D(3);\r\n\ \ \ \ \ \ \ \ \ \ \ \ while\ (true){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ placementCounter++;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (direction.toUpperCase().equals("RIGHT")){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (place\ +\ 3\ <\ battleBoard.length){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for(int\ i\ \=\ place\ +\ 3;\ i\ >\ place;\ i--){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ battleBoard[i]\ \=\ length3;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (placementCounter\ \=\=\ 20){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Could\ not\ place.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ if\ (direction.toUpperCase().equals("LEFT")){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (place\ -\ 3\ >\ 0){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for(int\ i\ \=\ place\ -\ 3;\ i\ <\ place;\ i++){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ battleBoard[i]\ \=\ length3;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (placementCounter\ \=\=\ 20){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Could\ not\ place.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Not\ a\ direction\ to\ place\ in.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\ else\ if\ (type\ \=\=\ 2\ &&\ count2\ \!\=\ 0){\r\n\ \ \ \ \ \ \ \ \ \ \ \ Battleship1D\ length2\ \=\ new\ Battleship1D(2);\r\n\ \ \ \ \ \ \ \ \ \ \ \ while\ (true){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ placementCounter++;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (direction.toUpperCase().equals("RIGHT")){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (place\ +\ 2\ <\ battleBoard.length){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for(int\ i\ \=\ place\ +\ 2;\ i\ >\ place;\ i--){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ battleBoard[i]\ \=\ length2;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (placementCounter\ \=\=\ 20){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Could\ not\ place.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ if\ (direction.toUpperCase().equals("LEFT")){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (place\ -\ 2\ >\ 0){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for(int\ i\ \=\ place\ -\ 2;\ i\ <\ place;\ i++){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ battleBoard[i]\ \=\ length2;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (placementCounter\ \=\=\ 20){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Could\ not\ place.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Not\ a\ direction\ to\ place\ in.");\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("Cannot\ place\:\ Ship\ Error");\r\n\ \ \ \ \ \ \ \ }\r\n}
comment3.params=a
comment3.target=int\ getHealth(int)
comment4.params=a
comment4.target=int\ shoot(java.lang.Integer)
comment4.text=public\ String\ shoot(Integer\ a)//add\ if\ already\ on\ either\ list\ cannot\ guess\ again\r\n\ \ \ \ {\r\n\ \ \ \ \ \ \ \ if\ (hitGuess.contains(a)\ ||\ missGuess.contains(a)){\r\n\ \ \ \ \ \ \ \ \ \ \ \ return\ "Already\ Guessed,\ try\ again";\r\n\ \ \ \ \ \ \ \ }else\ if(battleBoard[a]\ \=\=\ null){\r\n\ \ \ \ \ \ \ \ \ \ \ \ missGuess.add(a);\r\n\ \ \ \ \ \ \ \ \ \ \ \ return\ "Miss";\r\n\ \ \ \ \ \ \ \ }else\ if\ (battleBoard[a].placement()\ \=\=\ true\ &&\ battleBoard[a].health()\ >\ 1){\r\n\ \ \ \ \ \ \ \ \ \ \ \ hitGuess.add(a);\r\n\ \ \ \ \ \ \ \ \ \ \ \ battleBoard[a].hit();\r\n\ \ \ \ \ \ \ \ \ \ \ \ return\ "Hit";\ \r\n\ \ \ \ \ \ \ \ }\ else\ if(battleBoard[a].placement()\ \=\=\ true\ &&\ battleBoard[a].health()\ \=\=\ 1){\r\n\ \ \ \ \ \ \ \ \ \ \ \ hitGuess.add(a);\r\n\ \ \ \ \ \ \ \ \ \ \ \ battleBoard[a].hit();\r\n\ \ \ \ \ \ \ \ \ \ \ \ return\ "Sunk";\r\n\ \ \ \ \ \ \ \ }\ else\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ missGuess.add(a);\r\n\ \ \ \ \ \ \ \ \ \ \ \ return\ "Miss";\r\n\ \ \ \ \ \ \ \ }\r\n}
comment5.params=
comment5.target=java.lang.String\ randShoot()
comment6.params=
comment6.target=java.lang.String\ toString()
numComments=7
